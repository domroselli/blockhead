// Code generated by go-bindata.
// sources:
// data/index.html
// data/list.html
// data/listTransactions.html
// data/mine.html
// data/newTransaction.html
// DO NOT EDIT!

package main

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dataIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\x4d\x8f\xe4\x34\x10\xbd\xef\xaf\x28\xc2\x09\xa9\x93\xd0\xc0\x01\x2d\xe9\x96\x60\xe1\xb0\x12\x1f\x8b\x34\x08\x71\xac\xd8\xd5\x49\xed\x38\x76\x70\x55\x3a\x1b\x89\x1f\x8f\x9c\x74\x4f\xf7\xf4\xa4\x17\xc1\x81\xcb\xc4\x2e\xfb\xbd\x7a\x2e\xbf\xf2\x74\xf5\xc9\xf7\xbf\xbc\x79\xf8\xe3\xdd\x0f\xd0\x6a\xe7\xf6\xaf\xaa\xf4\x01\x87\xbe\xd9\x65\xe4\xb3\xfd\x2b\x00\x80\xaa\x25\xb4\xcb\x70\x9e\x76\xa4\x08\xa6\xc5\x28\xa4\xbb\x6c\xd0\x43\xfe\x75\x76\xbb\xec\xb1\xa3\x5d\x76\x64\x1a\xfb\x10\x35\x03\x13\xbc\x92\xd7\x5d\x36\xb2\xd5\x76\x67\xe9\xc8\x86\xf2\x79\xb2\x01\xf6\xac\x8c\x2e\x17\x83\x8e\x76\xdb\x6b\x32\x65\x75\xb4\xff\xce\x05\xf3\x08\x3f\xb2\x68\x55\x2e\x91\xcb\x0e\x31\x91\x7b\x05\x89\x66\x97\xb5\xaa\xbd\xbc\x2e\x4b\x7c\x8f\x1f\x8a\x26\x84\xc6\x11\xf6\x2c\x85\x09\xdd\x1c\x2b\x1d\xd7\x52\xbe\xff\x73\xa0\x38\x95\x5f\x16\x5f\x14\xdb\xd3\xa4\xe8\xd8\x17\xef\x25\xdb\x57\xe5\xc2\x77\x95\xc0\xb1\x7f\x84\x48\x6e\x97\x89\x4e\x8e\xa4\x25\xd2\x0c\xda\x48\x87\x4b\xc2\x86\xd5\x58\x5f\xa4\xad\x65\xa4\x3e\x94\x6f\x5a\x74\x18\xd1\x37\xe4\x42\xd9\xb1\xe7\xc2\x88\x94\x1d\x8a\x52\x2c\x2d\x8b\xce\xc1\xdc\xd2\x01\x07\xa7\x73\x7a\x23\x92\xfd\x4f\x69\x7d\x88\xf6\x26\x67\x55\x5e\x6e\xb9\xaa\x83\x9d\xae\xa4\xa4\x15\x8a\x97\xc0\x1c\xc4\x93\x96\x4f\x33\x30\x0e\x45\x76\x99\x0b\x4d\xc8\x96\xbb\x4a\x88\xaa\xc4\x3b\x10\xf6\x96\x3e\x14\xc9\x6a\x19\xc4\xe0\x68\x97\xd5\x83\x6a\xf0\x4f\x4c\x7d\xe4\x0e\xe3\x94\xed\xbf\xad\xc3\xa0\x2f\x89\xa4\x47\xbf\xff\xab\x2a\xe7\xef\x7a\x0e\x4f\xe3\x43\x44\x2f\x68\x94\x83\x5f\x4b\xb6\xff\x99\x46\xb8\xda\x73\x27\x4d\xbe\xff\x68\x9e\x8e\x3d\xad\xb2\xff\xc4\x9e\x60\x2e\x86\xfc\x37\x66\xc7\xa2\xab\xcc\xa9\x0f\xd6\x98\x97\x2b\xbc\xbe\xa8\xca\xf2\xf1\x5c\xd3\xd4\x81\xc8\x9e\xe2\xe2\xa7\x5d\xd6\xa3\xb5\xec\x9b\x5c\x43\xff\x1a\xbe\xa2\xee\x9b\xec\x46\xc8\x15\x38\x86\xf1\x66\xf5\x25\xbd\xcb\xa5\xcb\xb7\x9f\xc3\x69\x14\x0e\x07\x21\xcd\xb7\x2b\xb8\xc5\x54\xdb\xfd\xbb\x21\xf6\x41\xa8\x2a\xdb\xed\x9d\x4d\xfd\x7a\xfc\xc9\x63\xc0\x02\x1d\xa1\x57\xd0\x00\x35\x01\x7a\x60\xaf\x14\xd3\x8d\x1e\x09\x46\x9c\xd2\x82\x23\x8c\x1e\x30\x79\x09\xea\x04\x35\x2d\xb2\x07\x25\xd3\xfa\xe0\x42\x33\x15\xf0\x56\x13\x95\x0f\x0a\x96\x84\x1b\x4f\xf6\xcc\x08\x87\xc1\xb9\x04\x1b\xfd\x06\x22\xa1\x03\x9b\xfe\x5c\x78\x36\x50\x0f\xba\x2a\x93\xbd\x68\x12\xa9\x01\xd0\xb9\x30\xc2\x20\x14\x25\x4d\xcf\x22\x61\x64\x6d\x01\x41\xc3\x74\xad\x0c\xbd\x85\xc1\x5b\x8a\xa2\x69\xa8\x2d\x41\x8d\xc2\x26\x3d\xa3\x86\x7a\x95\x62\xbd\x5c\x75\xfc\xa7\x7a\xa1\x51\x01\x14\x40\x98\xa9\xd1\x05\x4f\xe0\x83\x25\x18\x5b\x8a\x94\x74\x42\x38\xcc\x19\x75\xea\xd9\xa0\x73\xcf\x94\xf5\x31\x18\x12\x21\x01\x8c\x04\x11\x7d\x01\x0f\x33\x70\xe4\x54\xa5\x54\xaf\x7a\x60\xa7\x39\x7b\x18\xa9\x86\xdf\xde\x9e\x88\xe7\xa3\xaf\x8a\x33\xe8\x01\xad\x05\xbd\xb4\xa2\x6c\x40\x23\x37\x0d\x45\x48\xef\x95\x6f\x36\x40\x96\xf5\xd9\x16\x20\x35\xc0\x1e\x42\xb4\x14\x53\x4d\x85\x68\x03\xa2\xd4\xe7\xf5\x94\xa7\xef\x06\xda\x30\x26\x41\x17\xf9\x63\x88\x8f\xf7\x8a\x57\xde\x31\xdb\xdd\xaa\x26\x0b\xff\x3a\x70\x4c\x6d\xf8\x6f\x1d\xfc\xd0\x12\xb4\x28\x2d\x1c\x42\x9c\xab\x8d\x46\x87\xb3\xad\x92\x15\x0d\x3a\x33\x38\x54\xb2\x50\xd5\x7b\x3c\x28\xc5\xaa\xac\xf7\xc0\x9a\x70\x50\x13\xcd\x55\x5b\x7c\x9a\x08\xe6\x03\x16\xf0\x7b\x8b\x0a\xda\x9e\xfa\x42\x12\x95\xa6\xd0\xd8\x92\x7f\x22\x65\xdf\xcc\x98\xa4\x60\x55\xde\x59\xd5\x2c\x67\x73\x2d\x30\x4b\x98\x0c\x50\x35\x72\x3d\x28\x9d\xdb\x86\xbd\x71\x83\x25\xbb\x01\x49\xf6\x4e\x90\x10\xa7\x19\x69\x59\x7a\x87\x13\xd9\xe5\xc4\x2c\x27\x2e\x37\xcd\x48\x13\x62\x24\xa3\xf0\xfa\xb3\xe4\x25\x9e\x25\x23\xd4\xac\xc9\x88\x08\xeb\x9e\x69\xd9\x3c\x52\xba\x7c\xa0\xa6\x49\x56\xa5\x64\xcd\xda\x51\x97\xba\x11\x1a\x3e\x92\x5f\x0e\xae\x4f\x94\x37\x4d\xc6\xba\x48\x49\x0d\x85\xb5\xa3\x8f\xd8\xe2\xe5\xcb\x57\x5a\x3e\xde\x3c\x97\xcf\x43\x57\xd3\xaa\x5c\xfe\x9f\x56\xe5\xf2\x23\xeb\xef\x00\x00\x00\xff\xff\xa6\xd6\xc7\x04\x75\x09\x00\x00")

func dataIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_dataIndexHtml,
		"data/index.html",
	)
}

func dataIndexHtml() (*asset, error) {
	bytes, err := dataIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/index.html", size: 2421, mode: os.FileMode(420), modTime: time.Unix(1511823357, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataListHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\xd1\x8f\xe2\xb6\x13\x7e\xbf\xbf\x62\xce\xb7\x12\x20\x96\x98\xbd\xdf\xef\xe1\x04\x09\x55\x7b\x3d\x75\xab\xde\xb6\xa7\x8a\x97\xaa\xaa\x2a\x13\x0f\xc4\xbb\x8e\x9d\xda\x0e\xbb\xb4\xdd\xff\xbd\xb2\x13\x96\x2c\x24\x2c\xb4\xbd\xfa\x85\x78\xfc\xcd\xf7\xd9\x9e\xb1\xc7\xc4\xaf\xbf\xfe\xe1\xfd\xfc\xa7\x4f\x1f\x20\x73\xb9\x9c\xbd\x8a\xfd\x0f\x48\xa6\x56\x09\x41\x45\x66\xaf\x00\x00\xe2\x0c\x19\xaf\x3e\x43\x37\x47\xc7\x20\xcd\x98\xb1\xe8\x12\x52\xba\xe5\xe8\x1d\xd9\x1f\x56\x2c\xc7\x84\xac\x05\xde\x17\xda\x38\x02\xa9\x56\x0e\x95\x4b\xc8\xbd\xe0\x2e\x4b\x38\xae\x45\x8a\xa3\xd0\xb9\x04\xa1\x84\x13\x4c\x8e\x6c\xca\x24\x26\x57\x4d\x32\x27\x9c\xc4\xd9\x57\x52\xa7\x77\xf0\x51\x58\x17\xd3\xca\xb2\x43\xd8\xd4\x88\xc2\x81\x35\x69\x42\x32\xe7\x0a\x3b\xa1\x94\xdd\xb2\x87\x68\xa5\xf5\x4a\x22\x2b\x84\x8d\x52\x9d\x07\x1b\x95\x62\x61\xe9\xed\x6f\x25\x9a\x0d\xfd\x5f\xf4\x36\xba\xaa\x3b\x51\x2e\x54\x74\x6b\xc9\x2c\xa6\x15\x5f\x43\x40\x0a\x75\x07\x06\x65\x42\xac\xdb\x48\xb4\x19\xa2\x23\x90\x19\x5c\xee\x04\x57\xc2\xa5\x5c\x45\x1e\x4a\x0d\x16\x9a\xbe\xcf\x98\x64\x86\xa9\x15\x4a\x4d\x73\xa1\x44\x94\x5a\x4b\x73\x66\x1d\x1a\xca\x85\x75\xc1\x38\xe2\xb8\x64\xa5\x74\x41\x3e\xb5\x96\xfc\x47\xb2\x4a\x1b\xbe\xa7\x19\xd3\x5d\x94\xe3\x85\xe6\x9b\xc6\x54\xfc\x08\x9a\x9d\x21\x18\x59\x3d\x97\x37\x04\x52\xc9\xac\x4d\x88\xd4\x2b\x4d\xaa\x58\x79\x8f\x98\xb2\x0e\x17\xa1\x38\x3e\x44\x3e\xd5\x08\x18\x2d\x31\x21\x8b\xd2\x39\xad\xc8\xec\xcb\x85\x2e\xdd\xa1\xa3\x2d\x98\x9a\xfd\x19\xd3\xf0\xdb\xce\xa9\xf0\x7e\x6e\x98\xb2\x2c\x75\x42\xab\x56\xf2\xef\xf1\x1e\x1a\x98\x0e\x99\xd1\xec\xa8\x4e\x2e\x14\xb6\xb2\xdf\x08\x85\x10\x16\x6f\xff\x1e\xb3\x14\xd6\xb5\x31\x6f\xb7\xb7\x30\x22\x67\x66\x43\x66\xfe\x1c\xb4\x29\x55\x21\x6c\x06\x2a\xe6\x62\xbd\x75\xf7\x27\x90\x09\x85\xa6\xca\xa7\x84\x14\x8c\x73\xa1\x56\x23\xa7\x8b\x09\xfc\x1f\xf3\x29\xd9\x9b\x58\xc3\xd9\xe8\xfb\xbd\x51\xdf\x0e\x0c\xcf\xf5\xe4\xc8\xe6\xa3\xab\xb7\x50\x7f\x49\x66\x5d\xf8\xce\xf9\xd6\x9a\x73\x9f\x8a\x39\x93\x2d\xe4\x81\xcf\xb1\x85\x44\x10\x3c\x21\x0b\xbf\x5e\xbf\x45\x1d\xd0\x0a\xfe\xfc\xa6\x6a\xc7\x98\xe3\x80\x9a\x68\xf6\xad\x4f\xd2\x98\xba\xec\x34\xf8\x27\xa3\xf5\xf2\x74\xf8\x35\xb3\xd9\x39\xe4\xb8\x16\xba\xb4\x55\xd4\xe1\x3c\xe7\xb9\xc8\xd1\x3a\x96\x17\x67\xb8\xec\x4e\x89\x85\x1b\x34\x77\x12\xe1\x47\xad\xdd\xcb\x0c\x31\x3d\xb6\xbf\xde\xff\x68\x84\x62\xf7\xfc\xea\x69\x21\xe8\x06\xc4\x34\xa4\xcb\xe1\x60\x4c\xb9\x58\xef\x25\xf7\x73\x53\xa3\x1b\xd3\x4a\xa1\xea\xd4\xd5\xc5\x6d\x0a\x4c\x88\xc3\x07\x47\x6f\xd9\x9a\x55\xd6\x46\x26\x5e\xf4\xb9\x4e\xcb\x1c\x95\x1b\x44\x06\x19\xdf\xf4\x97\xa5\x0a\xfb\xd7\x1f\x3c\xd3\xfd\xe3\x60\x72\x17\x91\xaf\x4c\xfd\xc3\x01\xdf\x4a\x23\x27\x10\xae\xfb\x09\xa5\x52\xa7\x4c\x66\xda\xba\xc9\xbb\xf1\x78\x4c\xc3\x61\xb8\x3c\x3c\x84\xbe\xf9\xf9\x4e\x80\x7c\xf3\x61\x4e\x2e\xa1\xed\xa4\xfa\xc6\x99\x63\x73\x0f\x24\xb7\x56\xab\x00\x6c\xc5\xd9\x32\x4d\xd1\xda\x09\x6c\xd7\x04\x7d\x83\xb6\xd0\xca\xe2\xa0\xdd\xa3\x7d\x31\xbe\xad\x99\x01\x67\xae\xe7\x37\x1f\x21\x81\x5e\x6f\xda\x09\xbc\x88\x90\xa5\xd9\x93\x50\x54\xdd\x77\x97\x8d\x39\xdc\xe1\xe6\x72\xcd\x64\x89\x83\x23\x7a\x5b\xcd\x54\x4b\x6d\x20\x01\xb2\x32\x88\x8a\x74\xeb\xfa\x26\x96\x81\x1d\x5e\x27\x40\xc6\xe4\x25\xfa\xad\x84\x96\xfc\x3b\xdc\x40\x02\xde\x75\x04\x57\xc7\x35\x7c\x4b\xb5\xb2\x5a\x62\x24\xf5\xaa\x4f\xb4\xe4\xde\x73\x02\x04\x86\x35\xd7\xe0\x4c\x8a\xc2\xe0\x1a\x32\x66\xb3\x8a\x64\x6f\xef\x7e\xae\x48\x7f\x89\xae\x43\x95\x88\x3c\xf0\x04\x05\xbf\x19\x27\x30\xf9\xcd\xda\x87\xdd\x35\x30\x45\x7d\x85\xfd\x1a\x64\x4f\xd8\xd2\x6a\x75\x75\xd4\x0c\xf2\x17\x62\xe6\xdb\xe3\x51\xc4\xf1\xd1\x3a\x29\x87\x49\x7b\x46\x37\x5b\xcf\xd7\x90\xd8\x71\xa8\x0b\xe9\x52\x2b\x37\xb2\xe2\x77\x9c\x5c\x8d\x8b\x87\x29\x99\xf5\x60\x08\x21\x33\xb7\x8b\x0f\x0f\x1e\x18\x9e\x42\x4d\x1d\x3f\x8f\xbb\xf0\x85\x07\x86\x9f\x83\x3a\xc4\xf5\x9f\x33\x87\x28\x4e\xde\x2c\x97\xe3\xf1\x78\x4a\x66\xe1\x31\xb4\x85\x56\x63\xbd\x61\x1d\xea\x61\xaf\x7d\x89\x8d\xdc\x81\xa1\x17\x0c\xef\xa8\xde\xe7\x59\xb6\xdb\x16\xcc\x7f\x85\xfe\xe9\x7d\xd7\x7d\x8b\x37\xcb\x6d\x78\x01\x7e\x11\x12\x26\xe9\xcc\xa3\x5e\xcb\xac\x03\x49\x55\xab\x7d\xa9\xae\xb6\x89\x9d\xb3\x47\xbe\x74\xf7\xa6\xc1\xd2\xe9\xf2\x38\x98\xbe\xea\xbe\xb3\xfb\xbd\x37\x4f\xef\xb4\xde\x20\x62\x45\x81\x8a\xf7\xab\xa3\xd5\x71\xd5\x3c\xb6\xa9\x1d\xa8\x3c\x19\x76\xff\xcf\x62\x5a\xfd\x65\xfd\x2b\x00\x00\xff\xff\x1d\xcc\xb5\x4a\xc3\x0e\x00\x00")

func dataListHtmlBytes() ([]byte, error) {
	return bindataRead(
		_dataListHtml,
		"data/list.html",
	)
}

func dataListHtml() (*asset, error) {
	bytes, err := dataListHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/list.html", size: 3779, mode: os.FileMode(420), modTime: time.Unix(1512756191, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataListtransactionsHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\xdd\x73\xdb\xb8\x11\x7f\xf7\x5f\xb1\x65\x32\x21\x35\x96\x48\x3b\xed\xc3\x8d\x42\xaa\x93\xa6\xe9\xc7\xcc\xdd\xe5\xda\xb8\x0f\x9d\xc4\x0f\x10\xb1\x12\x61\x83\x00\x03\x2c\xa5\x68\x52\xff\xef\x1d\x00\xfa\xa0\x28\xca\x76\xd3\x9b\xf3\x83\x49\x60\x3f\x7e\x8b\xc5\x0f\x8b\xa5\xf2\xdf\xfd\xf9\xc3\xbb\x9b\x7f\xff\xf2\x1e\x2a\xaa\xe5\xec\x22\x77\x0f\x90\x4c\x2d\x8b\x08\x55\x34\xbb\x00\x00\xc8\x2b\x64\x3c\xbc\xfa\x61\x8d\xc4\xa0\xac\x98\xb1\x48\x45\xd4\xd2\x62\xf2\x43\xd4\x17\x2b\x56\x63\x11\xad\x04\xae\x1b\x6d\x28\x82\x52\x2b\x42\x45\x45\xb4\x16\x9c\xaa\x82\xe3\x4a\x94\x38\xf1\x83\x31\x08\x25\x48\x30\x39\xb1\x25\x93\x58\x5c\x77\x9d\x91\x20\x89\xb3\x1b\xc3\x94\x65\x25\x09\xad\xe0\x47\x61\x29\xcf\xc2\xfc\x41\xcf\x96\x46\x34\x04\xd6\x94\x45\x54\x11\x35\x76\x9a\x65\xec\x8e\x7d\x4d\x97\x5a\x2f\x25\xb2\x46\xd8\xb4\xd4\xb5\x9f\xcb\xa4\x98\xdb\xec\xee\x4b\x8b\x66\x93\xfd\x3e\x7d\x9d\x5e\x6f\x07\x69\x2d\x54\x7a\x67\xa3\x59\x9e\x05\x7f\x1d\x00\x29\xd4\x3d\x18\x94\x45\x64\x69\x23\xd1\x56\x88\x14\x41\x65\x70\x71\x00\x5c\x0a\x2a\xb9\x4a\x9d\x6a\x66\xb0\xd1\xd9\xbb\x8a\x49\x66\x98\x5a\xa2\xd4\x59\x2d\x94\x48\x4b\x6b\xb3\x9a\x59\x42\x93\x71\x61\xc9\x4f\x4e\x38\x2e\x58\x2b\xc9\xc3\x97\xd6\x46\xbf\x11\xac\xd2\x86\xf7\x30\xf3\xec\xb0\xd7\xf9\x5c\xf3\x4d\x27\x14\x27\x41\x73\x98\xf0\x93\x6c\x1b\xcb\x8b\x08\x4a\xc9\xac\x2d\x22\xa9\x97\x3a\x9a\xfd\x49\xea\xf2\xde\x59\xe4\x19\x3b\x63\x22\x14\xc7\xaf\xa9\x23\x5c\x04\x46\x4b\x2c\xa2\x79\x4b\xa4\x55\x34\x7b\x3b\xd7\x2d\x9d\x1a\xda\x86\xa9\xd9\x7f\xf2\xcc\x3f\x87\x7d\x2a\x5c\x77\xb8\x32\xe8\xfc\x67\x5c\x43\x47\xe7\x0c\xcc\x64\xf6\x28\x4e\x2d\x14\x0e\x7a\xff\x49\x28\x04\xbf\x78\xfb\x7d\x9e\xa5\xb0\x34\xe8\xd9\xf1\x7e\xc8\x73\xd8\xb2\xee\xc6\xe4\x5c\xac\x76\xbb\xe1\xce\x1d\x13\x0a\x4d\xe0\x4f\x11\x35\x8c\x73\xa1\x96\x13\xd2\xcd\x14\xfe\x80\xf5\x9b\xa8\x17\x48\xc7\xd8\xe8\x75\x4f\x7a\xea\x5e\x4e\x6c\x3d\xb9\xbe\x82\xed\x9b\x64\x96\x76\xef\x7a\xb1\xb0\x48\x93\x6b\x3f\xae\xf9\x4e\xab\xe6\x8e\x79\x35\x93\x43\xbe\x9b\xd3\x39\xf7\x77\x53\x21\xac\x2b\x2d\x11\x04\x47\x06\x73\xac\x84\xe2\xc0\x60\xee\xf2\x51\x56\x4c\x28\x10\x16\xa8\x62\x04\x54\x21\x70\x46\xcc\x4d\x88\xba\x6e\x89\xcd\x25\xa6\xf0\x9e\x95\x15\x28\x5c\x07\x13\xe0\xd8\xa0\xe2\x16\xb4\xf2\x06\x15\xb3\x15\xe8\xc5\x20\xb6\x93\x37\x06\x57\x42\xb7\x36\x58\x8f\xc1\x6a\x10\x8b\x01\x49\x6c\x83\xab\xb2\x72\xa7\xcf\x8e\xbd\x4a\x08\x3c\x44\x69\x2b\xdd\x4a\x0e\x73\x2c\x75\x8d\x20\xd4\x8a\x49\xc1\xd3\x41\xdc\x7c\x6e\xce\x24\x43\x03\xc7\x5a\x2b\x4b\x86\x11\x02\x55\xc2\x8e\x01\xb9\x20\xd0\x0a\x41\x87\xb8\xe8\x40\x71\x0b\x73\x94\x7a\x0d\x4c\x71\xb0\x6c\x85\x20\x28\x85\x0f\xaa\x44\xd8\xe8\x36\x5e\xa1\x9f\xe4\x20\xc8\x8d\xb7\x11\x0e\x02\xcf\x11\x5c\x32\x81\x34\x2c\x35\xcc\x59\x79\xef\x5e\x1d\xda\x00\x7d\x67\x21\xd1\xd2\x97\x6b\x36\x83\x86\x2d\x31\x84\x80\x78\xd8\x29\x9f\xad\x85\x36\x7e\x15\x21\x87\x83\xd0\x21\xa1\xff\x6b\xa6\xde\x5a\xdb\xd6\x42\x2d\x03\x9e\x5b\x5d\xe5\xd6\xbf\xe5\x8d\x05\xb6\x20\xdc\x42\xbb\xd4\x39\x85\xb5\x90\xf2\x28\x44\x61\x0e\x7b\xec\xa3\x5d\x31\xd9\xa2\x63\x97\xd2\x6b\x30\xe7\x62\xba\x71\x4e\x85\xe2\xa2\x64\x84\x5b\x6a\xee\x89\xea\x2c\xb7\x7b\xef\xa8\xc0\x5a\x8b\xc7\x64\xf2\x40\x5c\xa3\x55\x31\x41\xcd\xa8\xac\x60\xbd\x4b\x59\xc8\x6b\xc5\xec\x29\x70\x9e\x0d\x9c\x1f\x97\x9d\xc1\x0c\xe5\x19\x17\xab\xde\xe9\x1f\x98\xfa\xae\x82\xf0\xfa\xa4\x20\xb8\x02\xf0\xfa\xc9\x02\xe0\xfd\xf9\x23\xbb\xf3\x68\xc9\x88\x06\x79\x04\x82\x17\x91\x5f\xbb\xa3\xd4\x19\xd3\x60\x7e\xdc\xaf\x0c\xeb\x9c\x61\x4c\xcf\xd1\xec\x2f\x46\xd7\x79\x46\xd5\xf3\xb4\x6f\xf4\xf3\x75\xdf\xd6\xba\x55\xf4\x7c\xfd\xa7\x35\xf3\xec\xb1\x55\x39\xfb\x47\xf3\x92\x93\xbb\xf0\x0f\x69\x76\xa3\xc7\xd2\x9c\xd1\x71\x83\xd0\x13\xba\x3d\xfc\x6d\x39\xf7\x6b\x5d\x42\xf0\x58\x49\xc9\x4b\x54\xd4\x6f\x83\xbc\xa0\xf1\xa9\xab\xd1\x5a\xb6\x44\xd7\x43\x9e\xb9\xcb\xf2\xec\xac\x8b\x27\x93\xd3\x19\xe6\x59\x48\x7f\x18\x6c\xfb\x5f\xda\x34\x58\x44\x84\x5f\x29\xbb\x63\x2b\x16\x66\x3b\x4b\x5c\xb4\x2a\x74\xd1\x4b\xa4\x7f\xb8\x96\x37\x19\xc1\xb7\x23\xc0\x15\x33\xe1\xfa\x2c\xe0\xdb\xc3\x9b\x8b\x23\x99\xd4\x25\xf3\x7d\x95\x45\x66\xca\x2a\xb5\xed\xdc\x92\x49\xae\x47\xa9\x6d\xa4\xa0\x24\x7e\x15\x8f\xd2\x85\x36\xee\xae\x4d\xf6\x50\xc9\x97\x3e\xc6\x0e\xc7\x42\x01\x5f\x76\xb6\x45\x3c\x1a\x0f\xe6\xeb\x1e\x0a\xb0\x9f\xae\x6e\x87\xa5\x2b\x2f\xbd\xbe\x85\x57\xaf\x80\x63\xa9\x39\xfe\xeb\x9f\x7f\x7f\xa7\xeb\x46\x2b\x54\x94\x38\xd1\xa8\xb7\x0c\xf7\x27\x16\x90\xdc\x8f\xfc\x4a\x3f\xdd\xdf\x42\x01\x9f\x56\xb7\x6f\x8e\xb4\x1e\x46\xc7\x63\x83\xd4\x1a\x15\x2c\x62\xdf\xbb\xc6\xb7\x29\xe9\x8f\x64\x84\x5a\x26\x1d\xe5\x87\x8b\x8b\xfd\xda\xdb\x86\x33\xc2\x4e\xbb\x99\xf8\x7b\x59\xf0\x5d\x4a\x4a\xad\xac\x96\x98\x4a\xbd\x4c\x22\xaf\xed\xae\x2b\xc1\xa7\x10\xc1\x25\xec\x94\x83\x73\x97\x32\xd2\xc5\xcb\x24\x7a\xb1\x30\xba\x9e\x74\x35\xd2\x15\x93\xbb\x20\xba\x3e\x49\x77\x8c\x9d\x95\x37\x27\xfd\x2c\x63\xa7\xdf\x31\x67\xbe\x62\x79\x07\xe1\xf5\x59\x4e\x82\xea\x56\xf0\x32\x75\x1f\x60\xc9\x81\x0e\x8e\xb0\x53\x88\x7e\xf9\xf0\xf1\x26\x3a\x6c\x70\x6b\xe4\x14\xfc\xf7\xcd\x34\xcb\x1c\xeb\x64\xa5\x2d\x4d\x7f\xb8\xba\xba\xca\x5c\xa3\xd3\x49\x68\xc7\xca\x6d\xcd\x14\xbe\xf9\xe2\xe5\x37\x68\x7a\x60\xf9\xd8\xe5\x74\x1b\xea\x18\x48\x4f\x49\x8f\xdd\xf2\xa6\xee\xdf\x38\xc4\x38\x0d\x8f\x87\x83\x47\xdb\x96\x25\x5a\x3b\xdd\x9f\x9b\xc4\x61\xf4\xe9\xec\x12\xb2\x3b\xf6\x23\xdf\xfc\x24\xd1\xcf\x7a\x7d\xae\x47\xfa\x7c\x68\x92\x3e\xf7\xbb\xa4\xd4\x77\xba\xfb\x1b\xbe\xda\xf5\x8b\xbe\x6d\xd9\xf6\x40\xbe\x89\xda\x76\x0f\x8c\x90\x7b\xe7\xbe\xb5\x48\xa3\x1e\x67\x5f\x26\xf1\x8b\x7d\x2d\x8f\x47\x29\xd6\x0d\x6d\x92\x9e\x92\xc3\xee\x24\xd4\x1e\x71\xf9\x90\x0b\x34\x46\x9b\x4e\x26\xd0\x98\x7e\x22\x98\x44\x43\x5e\xd0\x3d\x0d\xbb\xc3\x74\xd1\x3d\x18\xa7\xa0\x5b\x5f\x27\x0c\x79\x8c\x0b\x4b\x24\xff\x45\xd4\xf5\xf4\x47\xbf\xf5\x85\xa3\x66\x67\xfb\xfb\x84\xfb\xeb\xfb\x9b\x1e\x73\x6e\x9c\x20\xba\xb3\x47\x94\x3a\x21\x00\x24\x06\x6d\xa3\x95\xc5\xd1\x5e\xe9\xb4\x80\x92\xf9\xdb\xcd\x4f\x3f\x42\x01\x71\xdc\xdb\x90\x14\x5d\x6d\xdc\xf9\x18\x77\xfc\xde\xe3\x66\xec\x5b\xcb\xa1\x6a\xb9\x75\x78\x59\x0c\xd6\xc0\xd8\xb5\x33\x39\xf1\x59\x2e\x54\xd3\x76\x6f\x81\xd0\x35\xf9\x6a\x11\x5f\x86\xce\x35\x15\x1c\x2e\x21\x8e\xc2\xa8\x88\x62\xd8\x09\x2c\x2a\x8e\xc6\x0b\x67\x31\x5c\x9e\x81\xca\x1c\xce\x79\x2c\xd2\xcf\x40\x32\x58\x8a\x46\xa0\xa2\xff\x13\x6c\x5b\x86\x9e\x06\x0c\x8a\xdf\x85\xb6\xfd\xfe\xde\xb7\xa3\x58\x6a\xc5\x99\xd9\x44\xa0\x55\x29\x45\x79\x5f\x44\xa7\x55\xfe\x73\x7c\xc0\x0e\x41\x7d\x8e\x47\xfb\xb8\x3e\xb2\x15\x3e\x19\x87\x6b\xe6\xe2\xd3\x2b\xe9\xd1\xf3\xcd\x1a\xf7\x55\x9b\x04\xb6\x0c\x1e\xc2\x87\x8b\x8b\x8b\x97\x09\xd7\x65\x5b\xa3\xa2\x51\x6a\x90\xf1\xcd\xfe\xae\x4e\x02\xa9\x0f\xfc\x3b\x57\x1b\xf6\x91\x1c\x7e\x29\xcb\xb3\xf0\x13\xe2\x7f\x03\x00\x00\xff\xff\xca\x68\xf8\x78\x53\x14\x00\x00")

func dataListtransactionsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_dataListtransactionsHtml,
		"data/listTransactions.html",
	)
}

func dataListtransactionsHtml() (*asset, error) {
	bytes, err := dataListtransactionsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/listTransactions.html", size: 5203, mode: os.FileMode(420), modTime: time.Unix(1512763382, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataMineHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\xdf\x6f\xe3\xb8\x11\x7e\x96\xfe\x8a\x39\xee\x02\xb1\xb1\xb6\x94\x5c\xf7\xe1\x90\xc8\x06\xae\xdb\x6b\x7b\xc0\x5d\xf7\x80\xa6\x28\xfa\x38\x16\xc7\x16\x13\x8a\x54\xc9\x91\xbd\x6e\xba\xff\x7b\x41\xca\xb2\x65\x5b\xfb\x0b\x45\x9b\x97\x48\xe3\xe1\x37\x33\xdf\x7c\xe4\xd0\x2e\xbe\xfb\xc3\xfb\x77\x8f\xff\xf8\xed\x27\xa8\xb8\xd6\xcb\xb4\x08\xff\x40\xa3\xd9\x2c\x04\x19\xb1\x4c\x01\x00\x8a\x8a\x50\x2e\xd3\xa4\xa8\x89\x11\xca\x0a\x9d\x27\x5e\x88\x96\xd7\xf3\x1f\xc4\xd1\x6e\xb0\xa6\x85\xd8\x2a\xda\x35\xd6\xb1\x80\xd2\x1a\x26\xc3\x0b\xb1\x53\x92\xab\x85\xa4\xad\x2a\x69\x1e\x5f\x66\xa0\x8c\x62\x85\x7a\xee\x4b\xd4\xb4\xb8\x8b\x28\xac\x58\xd3\xf2\x2f\xb4\x83\x47\x87\xc6\x63\xc9\xca\x9a\x22\xef\xcc\x69\x52\xf8\xd2\xa9\x86\xc1\xbb\x72\x21\x2a\xe6\xc6\xdf\xe7\x39\x3e\xe1\x87\x6c\x63\xed\x46\x13\x36\xca\x67\xa5\xad\xa3\x2d\xd7\x6a\xe5\xf3\xa7\x7f\xb6\xe4\xf6\xf9\xef\xb2\xef\xb3\xbb\xc3\x4b\x56\x2b\x93\x3d\x79\xb1\x2c\xf2\x0e\x2f\x20\x6b\x65\x9e\xc1\x91\x5e\x08\xcf\x7b\x4d\xbe\x22\x62\x01\x95\xa3\xf5\x29\xd2\x46\x71\x29\x4d\x16\x5c\x73\x47\x8d\xcd\xdf\x55\xa8\xd1\xa1\xd9\x90\xb6\x79\xad\x8c\xca\x4a\xef\xf3\x1a\x3d\x93\xcb\xa5\xf2\x1c\x8d\x73\x49\x6b\x6c\x35\xc7\xb8\xa5\xf7\x62\x99\xfe\x8f\x03\x1a\xeb\xe4\x20\x5a\x6c\x60\xde\x75\x30\x3e\xaf\xac\xdc\x87\xa2\x83\x89\xdc\x32\x4d\xa2\x15\x0f\xd1\x5f\x09\x28\x35\x7a\xbf\x10\xda\x6e\xac\x58\xfe\x5e\xdb\xf2\x39\xb8\x16\x39\x5e\xfa\x2a\x23\xe9\x43\x16\x14\x23\xc0\x59\x4d\x0b\xb1\x6a\x99\xad\x11\xcb\x1f\x57\xb6\xe5\xc1\x0a\xdf\xa0\x59\xfe\xbb\xc8\xe3\xff\x0b\x14\x43\xbb\x41\xbf\x47\xe1\xae\x34\x71\x0e\x3c\x5f\x8e\x23\xd7\xca\xd0\x18\x5e\x5f\x61\xe3\x54\x8d\x6e\x2f\x96\xbf\x2a\x43\x10\x2b\xf5\x5f\x8b\xad\x95\xe7\xd1\x5c\x7f\x51\x9e\xcf\xb0\x3a\xf2\x23\xd3\x85\x54\xdb\x3e\x78\xd8\x1e\xa8\x0c\x39\x01\x51\x03\x0b\xd1\xa0\x94\xca\x6c\xe6\x6c\x9b\x7b\x78\x4b\xf5\x83\xe8\x83\x0e\x96\x39\xbb\x0b\xe6\x0b\x28\x3d\xf7\xf5\xfc\xee\x7b\x38\x3c\x69\xf4\x1c\x9f\x6b\xd9\x5b\x6b\x19\x84\x51\xa3\x8e\xab\x23\x6a\x49\x86\x63\x5a\x49\x52\x54\x77\xcb\xbf\x99\x79\x20\x4c\x0e\x99\xf6\x45\x5e\xdd\x1d\x17\xe4\xfd\x0a\xb8\xf8\x2b\x72\xa9\xb6\xd7\xe6\x0b\xa7\xab\x2a\x3e\xef\xd3\x57\x75\x7b\x55\x95\xaf\xe7\x76\xbd\xf6\xc4\xf3\xbb\x63\x95\xb7\x57\x55\x8e\xa0\x37\x63\xd6\xc7\x7d\xa3\x4a\xd4\x7a\x0f\x08\xab\xd0\x37\x50\xa6\x7f\x2c\x2b\x54\x06\x94\x87\x1a\x25\x41\xdb\x80\x5d\xc3\x16\x9d\xb2\xad\x07\x1e\xd0\x94\xc1\x63\x45\xa0\x24\x61\x70\xe6\x0a\x19\x76\x34\x12\x8b\xf1\x99\x00\xb5\x0e\x38\x5c\x11\x88\x86\x4c\xe8\xb9\x38\x43\x9b\x01\x1a\x09\x28\x65\xf0\xa9\x81\x2d\x20\x18\xda\x75\x29\x85\x50\xc8\xa7\x77\xd8\x29\xad\xe1\xa0\xa6\xb1\x90\x15\x41\x85\xbe\x22\x1f\x51\x25\x32\xc2\xda\xd9\x7a\x98\xc6\x21\x8b\xb3\x24\xba\x2a\xf6\xb6\x85\x12\x0d\x84\x63\x1d\x34\x32\xb9\x6c\x8c\xd8\x7c\x94\xd9\x62\x35\xa2\x95\x4f\xb5\x01\xe0\xaf\xca\x94\x04\x5c\x05\x06\xed\x7e\xd8\x80\xd6\x87\xec\x41\xfc\xe6\xac\x5d\x87\xa4\xff\x6e\xdd\xb3\x00\xd4\x1b\xeb\x14\x57\xf5\x0c\xd6\xd6\x41\xe8\x89\x85\xd2\x11\x32\x0d\x19\x83\x1d\x81\x21\x92\xe1\xd3\xd1\xc0\xde\xea\x6d\x58\xb1\x46\xe5\xf4\x1e\x08\xfd\x1e\x6a\xe4\x0a\x1a\x67\x57\x9a\xea\x0c\x7e\x36\x5d\x5e\x25\x7a\x0a\x70\x3b\x34\x1c\xe0\xd6\x2a\x34\x2a\xf2\xdb\xf1\xe5\x19\x1d\x7b\xd8\x29\xae\x60\x6d\x5b\x07\xff\x22\x67\xfd\x18\x67\x00\x8f\x01\xb1\x71\xb6\x24\xef\x83\x6c\x5a\xdf\x46\x19\x06\x31\x92\x84\x70\x98\x9b\x4d\x06\xef\x03\x2b\xbd\x34\x2b\xf4\xb0\x22\x32\x10\xb7\xea\xec\x4b\x4d\x1c\x8d\x8b\x8e\x82\xb8\x3a\x42\x14\xcf\xfa\x02\x42\x7d\x91\x3c\x19\xe9\x0c\x98\x5d\xd0\xa0\x1b\xc5\x9d\xb2\xc9\x9c\xd6\x1e\x3d\x62\x97\xba\x3d\x10\x90\x46\xa3\x46\x7a\x46\x42\x9c\xda\xa4\x3c\xac\xd0\x93\x04\xbb\x5e\xf7\x45\x5d\x2b\x32\x66\xef\xbd\x2d\x55\x84\x89\x4c\x2b\xce\xe0\xe7\xf5\x68\xd8\xf7\x86\x3a\x2c\xeb\x2f\xd0\xca\x2a\x8c\xd2\x4e\xd4\x60\x4d\x57\x5b\x88\x49\x86\x95\xa3\x53\x52\xca\x6c\x51\x2b\x19\xc2\xcd\x60\x57\xa9\xb2\x0a\x27\x04\xb7\xce\xc0\xca\x11\x3e\x8f\xb3\x7c\x89\xd4\x71\xf4\x6d\x9b\xe7\x53\x1b\x68\xec\xb8\x1d\x37\xfe\xf7\x53\x82\x71\xa5\xa9\xc7\xf0\xec\x54\x43\x52\x80\x92\x0b\x11\xd9\x0c\x73\x50\x74\x33\x84\x0f\xd7\xc4\x7e\x61\x37\x5a\x82\x7d\xf9\x47\x67\xeb\x22\xe7\xea\x64\x79\xb4\xe7\xef\x3f\xd6\xb6\x35\x7c\xb4\x75\x15\x1d\x20\x82\xb5\x87\x2e\xf8\x70\x7f\x89\xe6\xfe\xf9\xe0\x1e\x52\x3d\xbe\xf6\xfc\x05\xc7\x48\x4d\x32\xa0\xe9\x5b\xe6\xea\xdb\x8b\xa1\xf3\x76\x7c\x84\x2a\xd3\xb4\x1c\x89\x09\x7b\xb3\xbf\x6a\xf0\xbe\xf9\xf4\xc5\x03\xac\x29\xb5\x2a\x9f\xbb\x25\x83\xb9\x3b\x99\x0a\xd8\xa2\x6e\x69\x21\xc2\xdd\xe4\x3b\x71\x3d\x83\xff\x5f\x65\x35\x5d\x49\xe4\x3d\x6e\x28\x5c\x9b\x9b\xaf\xcd\x65\xa0\xc8\x22\xef\x3a\xd5\xbd\x1c\x2e\xf2\x1d\x35\x4c\x1f\x38\x7f\xc2\x2d\x76\xd6\x90\xc4\xba\x35\x91\x05\xd0\x16\xe5\xf0\x36\x32\x99\xc2\x4b\x17\xe3\xf5\xe4\xe6\xd5\x51\x7f\x37\xd3\x8c\xea\x86\xf7\x93\xe9\xc3\xe1\xd3\x2c\x7c\x07\x98\xbc\xa4\x49\xd2\x3a\x7d\x0f\xf1\x4e\x7d\x9f\xe7\xda\x96\xa8\x2b\xeb\xf9\xfe\x87\xdb\xdb\xdb\x3c\xac\x1d\xc2\x8b\x59\x9a\x24\x21\xab\x7b\x10\x7f\xfa\xe9\x31\xbe\x86\x79\xf9\x18\x4c\xe2\xc9\x5b\x13\x4d\xbe\x2d\xc3\x91\x7d\x0f\xc7\x3c\x27\x8e\x7c\x63\x8d\xa7\x69\x9a\x24\x2f\x07\x7a\xb6\xe8\x80\xdd\x9f\x1f\x7f\xfd\x05\x16\x70\x73\xf3\x70\x30\xbf\xce\x08\xcb\xea\xb8\x62\x36\x40\x79\xa6\xfd\x2c\x76\x3d\x96\x99\x24\x87\xd5\x6f\x16\xfd\x8e\xb8\x09\x9b\xaa\x60\xb9\xbc\x81\x37\x9d\x3e\x32\x4f\x46\x92\x83\x37\x27\x97\x9c\xe5\x85\x8f\xa3\x52\x35\x8a\x0c\x7f\xde\x0d\xe3\x16\xbc\xf2\x09\xbb\xf0\x98\xfd\xc7\xe9\x43\xda\x17\x72\xd1\x02\x6c\xc2\x04\x9a\x74\x49\x87\x4e\x24\x1f\xd3\xe3\x9a\xe4\x63\x9a\x1e\x0b\xbd\x12\x3b\xbc\xa4\xe7\x6d\x3b\x6f\xc2\xe7\x7a\x18\xb0\x82\xcf\x55\x53\x26\xa1\x73\x03\xbd\x88\x57\xbd\x86\xa7\xf1\xde\x3e\x11\xe1\x5b\x45\xbc\xa8\xc3\xbb\x6e\x26\x89\xe9\xc3\xd9\xf9\x19\x17\x9d\xf6\xf2\x34\xab\x94\xa4\xa3\xc8\xae\xc5\x19\xca\x9c\xa5\x09\x39\x67\xdd\x20\x11\x72\xee\x98\x07\x6a\x72\x1c\x2d\x91\x93\x23\xa5\x1f\xd3\xf4\xf5\x44\xda\xb2\xad\xc9\xf0\x34\x73\x84\x72\x3f\x39\x22\x4c\xa3\xe3\x4b\x9a\x9c\x18\x0a\x86\x6f\xd5\x76\x1c\x4b\x67\xcc\x06\xcb\xb5\xc2\x83\xf5\xf3\x22\x3f\xa4\x93\x8c\x68\xfc\xeb\xf5\x1d\xd3\x19\x4a\xfc\x0b\xf2\xfe\x0a\x69\x7f\x49\xd6\x97\x92\x3e\xc8\xf9\x8b\x52\x8e\x7d\x4a\xa3\x7b\xdf\xb2\xee\x58\xeb\x7f\x43\x28\xf2\xee\xf7\x93\xff\x04\x00\x00\xff\xff\x65\x23\x4f\x3e\x50\x11\x00\x00")

func dataMineHtmlBytes() ([]byte, error) {
	return bindataRead(
		_dataMineHtml,
		"data/mine.html",
	)
}

func dataMineHtml() (*asset, error) {
	bytes, err := dataMineHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/mine.html", size: 4432, mode: os.FileMode(420), modTime: time.Unix(1512764278, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataNewtransactionHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x51\x6f\xdb\x36\x10\x7e\xef\xaf\xb8\xb2\x05\xe6\x00\xb1\x94\xb4\x43\x56\xb8\x92\x81\xae\xdb\x9e\xb6\xb5\x40\xf3\xb2\xc7\xb3\x78\xb6\x98\x50\xa4\x46\x9e\xac\x18\x5d\xff\xfb\x40\xca\x4e\x64\x5b\x4e\xe3\xb4\xe8\x80\x6d\x7e\x88\xc4\xd3\xf1\xbe\xbb\xef\x3e\x1d\x18\x65\x4f\x7f\x7a\xf7\xf6\xf2\x8f\xf7\x3f\x43\xc9\x95\x9e\x3e\xc9\xc2\x05\x34\x9a\x45\x2e\xc8\x88\xe9\x13\x00\x80\xac\x24\x94\xdd\x6d\x5c\x56\xc4\x08\x45\x89\xce\x13\xe7\xa2\xe1\xf9\xf8\x95\xd8\x7d\x6c\xb0\xa2\x5c\x2c\x15\xb5\xb5\x75\x2c\xa0\xb0\x86\xc9\x70\x2e\x5a\x25\xb9\xcc\x25\x2d\x55\x41\xe3\xb8\x38\x05\x65\x14\x2b\xd4\x63\x5f\xa0\xa6\xfc\xbc\x1f\x8c\x15\x6b\x9a\xfe\x4e\x2d\x5c\x3a\x34\x1e\x0b\x56\xd6\x64\x69\x67\xbe\x73\xf3\x85\x53\x35\x83\x77\x45\x2e\x4a\xe6\xda\x4f\xd2\x14\xaf\xf0\x26\x59\x58\xbb\xd0\x84\xb5\xf2\x49\x61\xab\x68\x4b\xb5\x9a\xf9\xf4\xea\xcf\x86\xdc\x2a\x7d\x99\xbc\x48\xce\xd7\x8b\xa4\x52\x26\xb9\xf2\x62\x9a\xa5\x5d\xbc\x1e\x80\x56\xe6\x1a\x1c\xe9\x5c\x78\x5e\x69\xf2\x25\x11\x0b\x28\x1d\xcd\xef\x00\x17\x8a\x0b\x69\x92\xe0\x9a\x3a\xaa\x6d\xfa\xb6\x44\x8d\x0e\xcd\x82\xb4\x4d\x2b\x65\x54\x52\x78\x9f\x56\xe8\x99\x5c\x2a\x95\xe7\x68\x1c\x4b\x9a\x63\xa3\x39\xc2\x17\xde\x8b\xe9\x93\x6f\x83\x6b\xac\x93\x3d\xd0\x88\x97\xde\xf5\x3a\x9b\x59\xb9\xea\x51\x10\x9e\x90\xbb\x33\x44\x23\xae\x73\x79\x26\xa0\xd0\xe8\x7d\x2e\xb4\x5d\x58\x31\xfd\x51\xdb\xe2\x3a\xec\xc8\x52\x3c\xb0\x45\x19\x49\x37\x49\x10\x9c\x00\x67\x35\xe5\x62\xd6\x30\x5b\x23\xa6\x6f\x66\xb6\xe1\xfd\x8d\xbe\x46\x33\xfd\x2b\x4b\xe3\x75\x38\xa6\xa1\xb6\xa7\x93\xa1\xe0\x9b\x34\x6b\xa7\x2a\x74\x2b\xb1\xaf\xad\x41\xd8\xf1\xf4\x5e\xdc\x4a\x19\x1a\x2c\xe5\x37\x65\x08\x22\x19\xfe\x71\x91\xb5\xf2\x3c\x18\xf9\x57\xe5\x79\x28\x72\xd7\xc2\x7e\xa3\x32\xa9\x96\x9b\xb2\xc3\x7b\x88\xca\x90\x13\x10\x05\x95\x8b\x1a\xa5\x54\x66\x31\x66\x5b\x4f\xe0\x7b\xaa\x5e\x8b\xed\x4c\xb6\x7f\xfd\x58\xce\xb6\x83\xbe\xdb\x78\x7a\xec\xab\xf1\xf9\x19\xac\xef\x34\x7a\xde\xdc\xdb\xf9\xdc\x13\x8f\xcf\xe3\xba\x92\x1b\xaf\x4a\x06\x69\x56\xa8\x87\xa3\xd7\x43\xd6\x5e\x07\x3d\xa0\x23\xb8\x6a\x3c\x43\x5b\x22\x03\x97\xb4\x02\x6f\x1b\x23\x41\xab\x6b\x3a\x05\x6f\x2b\x02\x5e\xd5\x04\x76\x0e\x7c\xb7\x11\x38\xb8\xaf\x6c\x03\x2d\x1a\x06\xb6\xe0\xd9\x3a\x1a\x40\x8b\xbe\x04\xb3\xc0\x7e\x51\xa2\x32\xa0\x0c\xa0\x01\x55\x55\x0d\xe3\x4c\x13\x78\x46\xa6\x04\xde\x6c\xc5\x2f\xd0\xc0\x8c\x00\xcd\x8a\x4b\x65\x16\x30\x6b\x38\x6c\xb4\x8d\x83\x02\x3d\xc1\x00\x52\x4b\xb1\x1a\x49\xa8\xc3\x8e\x56\x71\x09\x9e\x4c\xe8\xd8\x76\x1d\x45\xe3\x1c\x99\x62\x95\x0c\x51\x96\x0e\x72\x96\xcd\xdc\xc3\x09\x06\xb8\x0c\x15\x93\xb6\x2d\xcc\xad\xab\xa0\x44\x0f\x08\xe2\x17\x67\x2b\x01\x73\x45\x5a\x02\x1a\x09\xe2\xd2\xae\x97\xa7\x91\x14\x70\x84\xba\xcf\x14\x97\xca\x43\x6b\x1b\x2d\x43\xee\xaa\x40\xad\x57\x83\x78\x91\x29\x40\x29\x1d\x79\x1f\x30\x63\xc1\xd6\x50\x1a\xae\x91\xc1\xd3\x2d\xfa\x14\x6f\x18\x0e\x7d\xa7\x25\xb9\xdb\x66\x26\x31\x7b\xf1\xa6\xb2\x8d\xe1\x75\x7e\x83\xa0\x86\x48\xfa\xd0\xfa\x0e\x5d\x19\xa6\x05\xb9\x23\x48\x3d\x48\xeb\x3d\xc4\xf6\xb5\xdb\x2a\xad\x23\xb8\x94\x24\x43\x22\x3b\x42\x0b\x9a\x69\xad\xf9\x8e\x83\xd3\xdc\xba\x05\xc9\x90\x65\xe7\xd7\xb9\x34\x86\x95\x06\x04\x43\xed\x30\xb1\x21\x1a\x28\x0f\x61\x6a\xc9\x04\xde\x99\x82\x22\x53\x85\x23\x64\x02\xdc\x12\xed\xc8\xba\xfe\xda\x9f\x40\x98\x2f\x60\x03\xbd\x01\x73\x60\x06\x4e\xc3\xed\xde\xb8\xdb\xfc\x6a\x5c\x50\x94\x4a\xcc\x3e\xc4\xa8\x9e\x0e\xf3\x75\x58\xb6\x87\xa4\x9b\x4a\xb5\xdc\x7d\x30\x60\xdc\x9d\x62\xa0\x64\x2e\x82\xaa\xfd\x58\x99\xba\xe1\x81\xc1\x73\x78\xa8\x55\x72\x7c\x71\x60\x66\xf6\x37\x79\xea\xf8\x3c\x34\x35\x1f\x00\xf3\xc3\xe6\x66\x3d\x38\x5f\xdd\x3b\xaa\x01\xb2\x50\xd2\xfd\x2e\x9d\x5b\x78\x1d\x3c\xf1\xe7\x5d\x77\x53\x74\xb6\x05\x47\xbe\xb6\xc6\xab\x25\x8d\x35\xce\x68\x78\x6a\x3f\xbc\xda\x17\x9b\x22\x5f\x1e\x11\x28\x06\x8b\xe8\x41\x55\xb9\x98\x87\xa9\x34\x0d\xb3\x29\x4b\xa3\xf9\x88\x9c\x86\x34\xf4\xb8\x12\x04\x1c\x59\x41\x14\x5f\x1c\xe9\xb9\x60\xba\x61\x01\x4b\xd4\x0d\xe5\x62\xad\xd0\x38\x6b\x6b\x8d\x05\x95\x56\x4b\xda\x14\x7a\x04\xcc\x11\xd5\x1d\x49\x04\x7c\x5d\x69\x0c\x85\xfc\x62\x89\xdc\x06\xed\x49\x85\xad\x98\x5e\xda\xa3\x65\x72\x1b\xea\x78\x96\xe0\x73\xb2\x79\x64\x51\x9f\x51\x0f\xdb\x1d\xed\x04\xc3\x37\x29\xf8\x3f\xa2\x24\xec\x4e\x17\xd3\xee\x94\xf1\xef\x54\x54\x10\xd2\xba\xce\x3b\x75\x6d\xa9\xea\xe2\xe2\xe2\x7f\x59\x7d\x45\xde\x0f\xfc\xdf\x0a\xd6\x14\x5a\x15\xd7\xb9\xf0\xcd\xac\x52\xdc\x3b\x44\x8e\x4e\x6e\x7b\xf3\x21\x3e\xeb\x9f\x30\x1f\x53\xe1\x3f\xd1\x9a\xc7\xe4\x59\x47\x79\x56\xe4\x3d\x2e\x48\x4c\x0f\x9e\xd0\xbf\x30\xeb\x2c\x7d\xd8\x81\x29\x4b\xef\x3f\x7f\xdd\x03\x77\xe0\xd1\xd0\x51\x76\xdb\xd4\x5b\x66\x69\xf7\x01\xa7\x5b\xac\xbf\x90\xdd\xbd\xcb\xe9\x15\x2e\xb1\xb3\xf6\xb8\x9e\x37\xa6\x3b\xa6\x0e\xa8\x0a\x3e\x6e\x21\x2f\xd1\x01\xdb\xfc\xf9\x48\x3c\x63\x2b\x4e\x92\x25\xea\xd1\xc9\xeb\x3d\x97\x70\x42\x89\x4e\xf1\xa8\x72\xd0\xad\x1b\x2a\xd1\x71\x3d\x5f\x6e\x5d\xb7\x7c\x9f\x27\x78\x85\x37\xa3\x8f\x7b\xdc\x84\xca\x26\x20\xde\xbf\xfb\x70\x29\x4e\xf7\x9e\x36\x4e\x4f\x20\x7e\x31\x9b\xa4\xa9\xb6\x05\xea\xd2\x7a\x9e\xbc\x3a\x3b\x3b\x4b\xb7\x3f\x1a\x0d\x6c\x96\xc8\x38\x81\x8f\x6c\x27\x6c\x4f\x43\x19\x93\xf0\xe7\xb4\xcb\x73\xd2\x5d\x3e\xed\x6f\xf3\x4d\x51\x90\xf7\x93\x5b\x52\x47\x21\xd0\x2e\x8d\xb7\x85\x8d\xc4\xb3\x8d\x74\x4f\xe2\xff\x51\x23\xd1\x4b\x6b\xdd\x10\x26\x29\x76\xd8\x0b\xbf\x01\x74\x72\xce\xba\x1e\x36\x39\x77\x08\x1a\x35\x39\x8e\x0e\x03\x91\xb7\x2c\x9f\xfa\xed\xf8\xb4\x96\xd9\xe6\x63\x69\x96\x76\x1f\x91\xff\x0e\x00\x00\xff\xff\x47\x45\x7b\x67\x55\x16\x00\x00")

func dataNewtransactionHtmlBytes() ([]byte, error) {
	return bindataRead(
		_dataNewtransactionHtml,
		"data/newTransaction.html",
	)
}

func dataNewtransactionHtml() (*asset, error) {
	bytes, err := dataNewtransactionHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/newTransaction.html", size: 5717, mode: os.FileMode(420), modTime: time.Unix(1512764827, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/index.html": dataIndexHtml,
	"data/list.html": dataListHtml,
	"data/listTransactions.html": dataListtransactionsHtml,
	"data/mine.html": dataMineHtml,
	"data/newTransaction.html": dataNewtransactionHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"data": &bintree{nil, map[string]*bintree{
		"index.html": &bintree{dataIndexHtml, map[string]*bintree{}},
		"list.html": &bintree{dataListHtml, map[string]*bintree{}},
		"listTransactions.html": &bintree{dataListtransactionsHtml, map[string]*bintree{}},
		"mine.html": &bintree{dataMineHtml, map[string]*bintree{}},
		"newTransaction.html": &bintree{dataNewtransactionHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
